"use strict";var app=angular.module("account",[]).controller("AccountController",["$scope","$http","period","prompt",function(n,t,i,r){function f(n,t,i,r,u,f,e,o,s,h,c,l,a,v,y,p){return{legend:n,height:t,radioTitle:i,radio1:r,radio2:u,name:f,currency:e,frequency:o,weekly:s,biWeekly:h,periodStart:c,monthly:l,annually:a,add:v,itemName:y,currencyName:p}}function u(){return{name:"",type:0,currency:undefined,period:i.setPeriod(0,0,1,31,0,11,new Date)}}n.user={fname:"",lname:"",email:"",pword:""};n.addItem=function(n){n.push(new u)};n.removeItem=function(n,t,i){var r=[];if(t.length===1){alert("You need at least one "+i+".");return}angular.copy(t,r);r.splice(n,1);angular.copy(r,t)};n.employers=[new u];n.employerText=new f("Employer",500,"Income Type:","Fixed Income","Variable Income","Employer Name","Net Pay","Pay Period Frequency:","This employer pays me every week on:","This employer pays me every other week on:","Enter a date when you've received payment from this employer or a date when you expect to be paid:","This employer pays me every month on the:","This employer pays me every year on:","Click to add an employer","employer","netPay");n.envelopes=[new u];n.envelopeText=new f("Envelope",671,"Envelope Type:","Dynamic","Static","Envelope Name","Amount","Withdraw Frequency:","This envelope gets withdrawn every week on:","This envelope gets withdrawn every other week on:","Enter a date when this envelope has been withdrawn:","This envelope gets withdrawn every month on the:","This envelope gets withdrawn every year on:","Click to add an envelope","envelope","amount");n.frequency=i.frequency;n.daysOfWeek=i.daysOfWeek;n.daysOfMonth=i.daysOfMonth;n.months=i.months;n.screenIndex=0;n.setScreen=function(t){n.screenIndex=t};var e=function(){console.log("Accept")},o=function(){console.log("Decline")};n.submit=function(i){if(!i.$valid){angular.forEach(i.$$controls,function(n){n.$validators.required&&n.$setTouched()});r.show(r.type.confirm,"Ooops! Please correct all invalid fields.",n,e,o);return}var u={params:{user:n.user,employers:n.employers,envelopes:n.envelopes}};t.get("Account.asmx/CreateAccount",u).then(function(){},function(t){r.show(r.type.alert,t.statusText,n)})}}]).directive("itemSets",function(){return{restrict:"E",controller:"AccountController",scope:{items:"=",itemText:"=",form:"="},templateUrl:"item-set.html"}}).directive("confirm",function(){return{require:"ngModel",scope:{confirm:"="},link:function(n,t,i,r){r.$validators.confirm=function(t){return t===n.confirm};n.$watch("confirm",function(){r.$validate()})}}}).directive("password",function(){return{require:"ngModel",link:function(n,t,i,r){r.$validators.password=function(n){return n===""||n===undefined?!0:/^((?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,16})$/.test(n)?!0:!1}}}}).directive("setName",function(){return{scope:{setName:"@",nameIndex:"@",numItems:"@"},link:function(n,t,i){n.$watch("numItems",function(){i.$set("name",n.setName+n.nameIndex)})}}});